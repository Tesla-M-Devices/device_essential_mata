import /init.mata.fingerprint.rc
import /init.mata.ramdump.rc
import /init.mata.diagtest.rc
import /init.mata.lcm.rc
import /init.mata.alt.rc
import /init.mata.sensor.rc
import /init.mata.ufs.rc
import /init.mata.usb.rc
import /init.mata.diag.rc
import /init.mata.power_off_charging.rc

on early-boot
	# Update dm-verity state and set partition.*.verified properties
	verity_update_state

# Needed for OTA control

on property:ro.boot.carrier.sku=*
	setprop ro.oem.key1 ${ro.boot.carrier.sku}

on property:sys.post_boot.parsed=1
	# Reserve CPU 7 for top-app (VR) only
	write /dev/cpuset/top-app/cpus 0-7
	write /dev/cpuset/foreground/boost/cpus 0-6
	write /dev/cpuset/foreground/cpus 0-6

on post-fs-data
	# For userdebug - verity not enabled
	# set aggressive read ahead for dm-0 and dm-1 during boot up
	write /sys/block/sda/queue/read_ahead_kb 2048
	mkdir /data/preloads 0775 system system
	start mata_provision

on boot
	chown system shell /sys/class/sidecar/power_control
	chown system system /sys/class/leds/red/blink
	chown system system /sys/class/leds/green/blink
	chown system system /sys/class/leds/blue/blink

	# add a cpuset for the camera daemon
	# we want all cores for camera
	mkdir /dev/cpuset/camera-daemon
	write /dev/cpuset/camera-daemon/cpus 0-7
	write /dev/cpuset/camera-daemon/mems 0
	chown system system /dev/cpuset/camera-daemon
	chown system system /dev/cpuset/camera-daemon/tasks
	chmod 0664 /dev/cpuset/camera-daemon/tasks

# provisioning service
service mata_provision /system/bin/provision.sh
	class main
	user root
	group root system
	disabled
	oneshot

on property:sys.boot_completed=1
	# For userdebug - verity not enabled
	write /sys/block/sda/queue/read_ahead_kb 512

on property:sys.grip.status=off
	start disable_grip

on property:sys.grip.status=on
	start enable_grip

service disable_grip /system/vendor/bin/hbtp_daemon tool sendCommand enableGripRejection 0
	user system
	group system
	oneshot
	disabled

service enable_grip /system/vendor/bin/hbtp_daemon tool sendCommand enableGripRejection 1
	class main
	user system
	group system
	oneshot
	disabled

# Fastboot needs to be root for access to /data/local/tmp
# Needs to be part of system group to access OTA files
service update_neko /system/bin/fastboot update /data/ota_package/update_neko.zip
	class main
	user root
	group system shell cache
	seclabel u:r:shell:s0
	oneshot
	disabled

# Use ro.runtime.firstboot as a trigger, to cover the cases where
# the user set a lock screen
on property:dev.bootcomplete=1 && property:ro.runtime.firstboot=*
	write /sys/class/sidecar/enable_control 1
